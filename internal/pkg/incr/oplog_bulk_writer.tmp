package incr

import (
	"github.com/sebastienferry/mongo-repl/internal/pkg/log"
)

type OplogBulkWriter struct {
	Collection string
	queuedLogs chan *ParsedLog
}

func NewOplogBulkWriter(queuedLogs chan *ParsedLog) *OplogWriter {
	return &OplogWriter{
		queuedLogs: queuedLogs,
	}
}

// Montly taken from db_writer_bulk.go
func (ow *OplogBulkWriter) StartWriter() {

	log.Info("Starting the oplog buld writer")

	// for log := range ow.queuedLogs {

	// 	var updates []mongo.WriteModel = make([]mongo.WriteModel, 0)
	// 	// for _, log := range logs {
	// 	// 	switch log.Operation {
	// 	// 	case "i":

	// 	// 		if len(log.DocumentKey) > 0 {
	// 	// 			// update
	// 	// 			updates = append(updates, mongo.NewUpdateOneModel().SetFilter(log.DocumentKey).SetUpdate(log.Object))
	// 	// 		} else {
	// 	// 			// insert
	// 	// 			updates = append(updates, mongo.NewInsertOneModel().SetDocument(log.Object))
	// 	// 		}

	// 	// 	case "u":
	// 	// 	case "d":
	// 	// 	}
	// 	// }

	// 	if len(logs) > 10 {
	// 		// Bulk write
	// 		log.DebugWithFields("Bulk writing", log.Fields{"count": len(updates)})
	// 	}
	// }

	//opts := options.BulkWrite().SetOrdered(false)
	//res, err := mong.Registry.GetTarget().Client.Database("DeliveryCache").Collection(collection).BulkWrite(nil, models, opts)
}
